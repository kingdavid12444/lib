
local UILib = {}

local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

local function createInstance(class, props)
    local inst = Instance.new(class)
    for i,v in pairs(props) do
        inst[i] = v
    end
    return inst
end

function UILib:CreateWindow(title)
    local gui = createInstance("ScreenGui", {
        Name = "UILib",
        Parent = CoreGui,
        ZIndexBehavior = Enum.ZIndexBehavior.Sibling,
        ResetOnSpawn = false
    })

    local main = createInstance("Frame", {
        Size = UDim2.new(0, 500, 0, 350),
        Position = UDim2.new(0.5, -250, 0.5, -175),
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        BorderSizePixel = 0,
        Parent = gui,
        Active = true,
        Draggable = true
    })

    createInstance("UICorner", {CornerRadius = UDim.new(0, 8), Parent = main})

    local titleBar = createInstance("TextLabel", {
        Size = UDim2.new(1, 0, 0, 40),
        BackgroundTransparency = 1,
        Text = title or "Window",
        Font = Enum.Font.GothamBold,
        TextSize = 20,
        TextColor3 = Color3.new(1, 1, 1),
        Parent = main
    })

    local tabHolder = createInstance("Frame", {
        Size = UDim2.new(0, 120, 1, -40),
        Position = UDim2.new(0, 0, 0, 40),
        BackgroundColor3 = Color3.fromRGB(25, 25, 25),
        Parent = main
    })

    local contentHolder = createInstance("Frame", {
        Size = UDim2.new(1, -130, 1, -50),
        Position = UDim2.new(0, 130, 0, 50),
        BackgroundTransparency = 1,
        Parent = main
    })

    local tabs = {}

    function UILib:CreateTab(tabName)
        local tabButton = createInstance("TextButton", {
            Size = UDim2.new(1, 0, 0, 30),
            Text = tabName,
            Font = Enum.Font.Gotham,
            TextSize = 14,
            BackgroundColor3 = Color3.fromRGB(35, 35, 35),
            TextColor3 = Color3.new(1, 1, 1),
            Parent = tabHolder
        })
        createInstance("UICorner", {CornerRadius = UDim.new(0, 6), Parent = tabButton})

        local tabContent = createInstance("ScrollingFrame", {
            Size = UDim2.new(1, 0, 1, 0),
            CanvasSize = UDim2.new(0, 0, 10, 0),
            ScrollBarThickness = 6,
            BackgroundTransparency = 1,
            Parent = contentHolder,
            Visible = false
        })

        createInstance("UIListLayout", {
            Padding = UDim.new(0, 6),
            SortOrder = Enum.SortOrder.LayoutOrder,
            Parent = tabContent
        })

        tabs[tabName] = tabContent

        tabButton.MouseButton1Click:Connect(function()
            for _, v in pairs(contentHolder:GetChildren()) do
                if v:IsA("ScrollingFrame") then
                    v.Visible = false
                end
            end
            tabContent.Visible = true
        end)

        local tabAPI = {}

        function tabAPI:AddButton(text, callback)
            local button = createInstance("TextButton", {
                Size = UDim2.new(1, -10, 0, 30),
                Text = text,
                Font = Enum.Font.Gotham,
                TextSize = 14,
                BackgroundColor3 = Color3.fromRGB(45, 45, 45),
                TextColor3 = Color3.new(1, 1, 1),
                Parent = tabContent
            })
            createInstance("UICorner", {CornerRadius = UDim.new(0, 6), Parent = button})
            button.MouseButton1Click:Connect(function()
                callback()
            end)
        end

        function tabAPI:AddToggle(text, callback)
            local toggle = false
            local button = createInstance("TextButton", {
                Size = UDim2.new(1, -10, 0, 30),
                Text = "[ OFF ] " .. text,
                Font = Enum.Font.Gotham,
                TextSize = 14,
                BackgroundColor3 = Color3.fromRGB(45, 45, 45),
                TextColor3 = Color3.new(1, 1, 1),
                Parent = tabContent
            })
            createInstance("UICorner", {CornerRadius = UDim.new(0, 6), Parent = button})
            button.MouseButton1Click:Connect(function()
                toggle = not toggle
                button.Text = (toggle and "[ ON ] " or "[ OFF ] ") .. text
                callback(toggle)
            end)
        end

        function tabAPI:AddSlider(name, min, max, callback)
            local value = min
            local holder = createInstance("Frame", {
                Size = UDim2.new(1, -10, 0, 40),
                BackgroundColor3 = Color3.fromRGB(45, 45, 45),
                Parent = tabContent
            })
            createInstance("UICorner", {CornerRadius = UDim.new(0, 6), Parent = holder})

            local label = createInstance("TextLabel", {
                Size = UDim2.new(1, 0, 0, 20),
                Text = name .. ": " .. value,
                Font = Enum.Font.Gotham,
                TextSize = 12,
                TextColor3 = Color3.new(1, 1, 1),
                BackgroundTransparency = 1,
                Parent = holder
            })

            local sliderBar = createInstance("Frame", {
                Size = UDim2.new(1, -20, 0, 6),
                Position = UDim2.new(0, 10, 1, -12),
                BackgroundColor3 = Color3.fromRGB(60, 60, 60),
                Parent = holder
            })
            createInstance("UICorner", {CornerRadius = UDim.new(0, 3), Parent = sliderBar})

            local fill = createInstance("Frame", {
                Size = UDim2.new(0, 0, 1, 0),
                BackgroundColor3 = Color3.fromRGB(0, 170, 255),
                Parent = sliderBar
            })
            createInstance("UICorner", {CornerRadius = UDim.new(0, 3), Parent = fill})

            local dragging = false
            sliderBar.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = true end
            end)
            game:GetService("UserInputService").InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end
            end)
            game:GetService("RunService").RenderStepped:Connect(function()
                if dragging then
                    local mouse = game:GetService("UserInputService"):GetMouseLocation().X
                    local barPos = sliderBar.AbsolutePosition.X
                    local barSize = sliderBar.AbsoluteSize.X
                    local percent = math.clamp((mouse - barPos) / barSize, 0, 1)
                    fill.Size = UDim2.new(percent, 0, 1, 0)
                    value = math.floor((min + (max - min) * percent) + 0.5)
                    label.Text = name .. ": " .. value
                    callback(value)
                end
            end)
        end

        return tabAPI
    end

    return UILib
end

return UILib
